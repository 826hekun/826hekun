---
title: "AUCell"
output: html_document
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE,warning = F,message = F)
```

#### 1.基因

```{r}
rm(list = ls())
load("g.Rdata")
```

#### 2.AUCell

https://www.ncbi.nlm.nih.gov/pmc/articles/PMC9897923/用这个文章里的方法，将单细胞亚群的marker基因与ros相关基因取交集，用作AUCell的基因集

>The intersection of marker genes was selected based on strong population specificity (adj_p < 0.05 & |avg_log2FoldChange| > 1.5 & pct.1 > 0.5 & pct.2 < 0.5) from each cell subgroup and factors related to OS responses. 

seu.obj是seurat+singleR得出的对象，allmarkers是findallmarkers得到的数据框。

```{r}
library(Seurat)
library(tidyverse)
load("seu.obj.Rdata")
DotPlot(seu.obj,features = g,cols = "RdYlBu")+RotatedAxis()
```

AUCell用于计算每个细胞中特定基因集的活性程度。用上面的gi作为基因集来计算。

AUCell的三个步骤:

Build the rankings：矩阵中的每个细胞里，给基因进行排序。
Calculate the Area Under the Curve (AUC)：计算每个细胞的AUC值
Set the assignment thresholds：计算活性区分的阈值

```{r}
library(GSEABase)
geneSets <- GeneSet(g, setName="pyroptosis")
geneSets
#BiocManager::install("AUCell")
library(AUCell)
exprMatrix = seu.obj@assays$RNA@layers$data
rownames(exprMatrix) = Features(seu.obj)
colnames(exprMatrix) = Cells(seu.obj)
cells_rankings <- AUCell_buildRankings(exprMatrix)
cells_AUC <- AUCell_calcAUC(geneSets, cells_rankings)
set.seed(333)
cells_assignment <- AUCell_exploreThresholds(cells_AUC, plotHist=TRUE, assign=TRUE) 
auc_thr = cells_assignment$pyroptosis$aucThr$selected
auc_thr
```

#### 3.FeaturePlot可视化

标准版：

```{r}
library(Seurat)
seu.obj$auc_score = as.numeric(getAUC(cells_AUC))
seu.obj$auc_group = ifelse(seu.obj$auc_score>auc_thr,"high_pyroptosis","low_pyroptosis")
```

画图：

```{r}
dat<- data.frame(seu.obj@meta.data, 
                seu.obj@reductions$tsne@cell.embeddings,
                seurat_annotation = seu.obj@active.ident)
class_avg <- dat %>%
  group_by(seurat_annotation) %>%
  summarise(
    tSNE_1 = median(tSNE_1),
    tSNE_2 = median(tSNE_2)
  )

library(ggpubr)
ggplot(dat, aes(tSNE_1, tSNE_2))  +
  geom_point(aes(colour  = auc_score)) +
  viridis::scale_color_viridis(option="A") +
  ggrepel::geom_label_repel(aes(label = seurat_annotation),
                            data = class_avg,
                            label.size = 0,
                            segment.color = NA)+
  theme_bw()
```

##### 高低组

```{r}
ggplot(dat,aes(x = tSNE_1,y = tSNE_2))+
  geom_point(aes(color = auc_group),size = 0.5)+
  theme_classic()
```


#### 4.组间比较

```{r}
library(paletteer)
ggplot(dat,aes(x = seurat_annotation,y= auc_score,fill = seurat_annotation))+
  geom_violin(alpha = 0.9)+
  geom_jitter(size = 0.2)+
  scale_fill_paletteer_d("ggsci::category20_d3")+
  theme_classic()
```

#### 5.活跃组的makergene

```{r}
f = "activemakers.Rdata"
if(!file.exists(f)){
  markers <- FindMarkers(seu.obj, ident.1 = "high_pyroptosis", 
                       group.by = 'auc_group')
  save(markers,file = f)
}
load(f)
head(markers)
```


